Given a graph $G$ and a vertex $q \in G$, the {\it community search} query returns a subgraph of $G$ that contains vertices related to $q$. Communities, which are prevalent in {\it attributed graphs} such as social networks and knowledge bases, can be used in emerging applications such as product advertisement and setting up of social events.
In this paper, we investigate the {\it attributed community query} (or ACQ), which returns an {\it attributed community} (AC) for an {\it attributed graph}. The AC is a subgraph of $G$, which satisfies both {\it structure cohesiveness} (i.e., its vertices are tightly connected) and {\it keyword cohesiveness} (i.e., its vertices share common keywords).  The AC enables a better understanding of how and why a community is formed (e.g., members of an AC have a common interest in music, because they all have the same keyword ``music'').  An AC can be ``personalized''; for example, an ACQ user may specify that an AC returned should be related to some specific keywords like ``research'' and ``sports''.

To enable efficient AC search, we develop the CL-tree index structure and three algorithms based on it. We further propose index maintenance algorithms for dynamic graphs and define two typical variants of the ACQ problems. We evaluate our solutions on four large graphs, namely Flickr, DBLP, Tencent, and DBpedia. Our results show that ACs are more effective and efficient than existing community retrieval approaches. Moreover, an AC contains more precise and personalized information than that of existing community search and detection methods.