package prep;

import java.io.*;
import java.util.zip.GZIPInputStream;

import config.*;

/**
 * 
 * @author chenyankai
 * @date Apr 26, 2017
 */

public class Extract {
	private static int pubMedSize=3;
	
	private void Unzip(String fileName){
		String outName=null;
		try {
			GZIPInputStream gzInput=new GZIPInputStream(new FileInputStream(Config.localPath+fileName));
			
			outName = fileName.substring(0,fileName.length()-3);
			FileOutputStream fout=new FileOutputStream(Config.localPath+outName);
			
			int num;
			byte[] buf=new byte[1024];
			while ((num = gzInput.read(buf,0,buf.length)) != -1)
			{   
			    fout.write(buf,0,num);   
			}
			gzInput.close();   
		    fout.close();   
	      
		} catch (IOException e) {
			// TODO Auto-generated catch block
			System.out.println("Error in output step!");
			e.printStackTrace();
		}	
	}
	
	
	private void deleteFile(String fileName){
		
		
		
	}
	
	
	public void process(){
		DownloadFtp downFtp=new DownloadFtp(Config.pubMedHost,Config.pubMedUsr,Config.pubMedPswrd, Config.pubMedPort, Config.ftpPath, Config.localPath);
		MeSHPrep meSHPrep=null;
		for(int i=1;i<=pubMedSize;i++){
			String name=downFtp.GeneFileName(i);
//			downFtp.downloadFile(name);
			Unzip(name);
			String command="gzip -d "+Config.localPath+name;
			String delete="rm -f "+Config.localPath+name.substring(0,name.length()-3);
//			/Users/chenyankai/GitDefault/workspace/HC/file/medline17n0001.xml.gz";
			try {
//				System.out.println(command);
//				Runtime.getRuntime().exec(command);
//				meSHPrep=new MeSHPrep(name);
//				meSHPrep.domMeSH(i+".txt");
//				Runtime.getRuntime().exec(delete);
			} catch (Exception e) {
				// TODO: handle exception
				System.err.println("error in processing");
			}	
		}
		
	}
	
	public static void main(String[] a){
		Extract extract=new Extract();
		extract.process();
		
	}
//		
	
}
