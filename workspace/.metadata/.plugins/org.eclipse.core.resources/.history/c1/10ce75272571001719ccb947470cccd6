package algorithm.basic;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PTree {
	private Map<Integer, PNode> pTree=null;
	
	public PTree(){
		this.pTree=new HashMap<Integer,PNode>();
	}
	
	public void add(int id,PNode node){
		pTree.put(id,node);
	}
	
	public Map<Integer, PNode> getPtree(){
		return this.pTree;
	} 
	
	public void loadPTree(int[] seq){
		System.out.println("loading");
	}
	
	public void testLoadTree(){
		
		
		
	}
	
	public static void main(String[] args){
		Map<Integer,int[]> map=new HashMap<Integer,int[]>();
		int[]a1={3,19,12}; map.put(1, a1);
		int[]a2={};map.put(2, a2);
		int[]a3={4,7};map.put(3, a3);
		int[]a4={5,6};map.put(4, a4);
		int[]a5={};map.put(5, a5);
		int[]a6={};map.put(6, a6);
		int[]a7={8};map.put(7, a7);
		int[]a8={9};map.put(8, a8);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		int[]a={};map.put(, a);
		
		
		
		
	}
	
}
