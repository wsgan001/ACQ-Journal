package EXP;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.util.*;

public class accuracy {

	public double precision(Set<Integer> QueryCommunity, Set<Integer> TrueCommunity){
		Set<Integer> set = new HashSet<Integer>();
		set.addAll(QueryCommunity);
		set.retainAll(TrueCommunity);
		double size1 = set.size();
		double size2 = QueryCommunity.size();
		return size1/size2;
	}
	
	public double recall(Set<Integer> QueryCommunity, Set<Integer> TrueCommunity){
		Set<Integer> set = new HashSet<Integer>();
		set.addAll(QueryCommunity);
		set.retainAll(TrueCommunity);
		double size1 = set.size();
		double size2 = TrueCommunity.size();
		return size1/size2;
	}
	

	public double F1(double precision, double recall){
		return 2*(precision*recall)/(precision+recall);
	}
	
	
	public void getGroundTrueCommunity(String file,int k){
		Map<Integer, Set<Integer>> queryIdCommunity = new HashMap<Integer, Set<Integer>>();
		try {
			BufferedReader reader = new BufferedReader(new FileReader(file));
			String line = new String();
			while((line=reader.readLine())!=null){
				String[] str = line.split("\t");
				if(str.length >= k+1){
					Random random = new Random();
					int queryId = random.nextInt(str.length-2) + 1;
					if(!queryIdCommunity.containsKey(queryId)){
						Set<Integer> commmunity = new HashSet<Integer>();
						for(int i = 1; i <str.length; i++ ){
							int vertex = Integer.parseInt(str[i]);
							commmunity.add(vertex);
						}
						queryIdCommunity.put(queryId, commmunity);
					} 
					
				}
				
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	}
	
	
	
	
	
	
	public static void main(String[] args){
		accuracy accuracy = new accuracy();
		Set<Integer> set1 = new HashSet<Integer>();
		Set<Integer> set2 = new HashSet<Integer>();
		set1.add(1);
		set1.add(2);
		set1.add(3);
		set2.add(1);
		set2.add(4);
		set2.add(5);
		set2.add(7);
		double precision = accuracy.precision(set1, set2);
		double recall = accuracy.recall(set1, set2);
		System.out.println(precision);
		System.out.println(recall);
		System.out.println(accuracy.F1(precision, recall));
	}
	
}
