environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python27"
      PYDEVD_USE_CYTHON: YES

    - PYTHON: "C:\\Python27"
      PYDEVD_USE_CYTHON: NO

    #- PYTHON: "C:\\Python33"
    #- PYTHON: "C:\\Python34"
    #- PYTHON: "C:\\Python35"
    #- PYTHON: "C:\\Python27-x64"
    #- PYTHON: "C:\\Python33-x64"
    #  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python34-x64"
    #  DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python35-x64"
      PYDEVD_USE_CYTHON: YES

    - PYTHON: "C:\\Python35-x64"
      PYDEVD_USE_CYTHON: NO

install:
  # We need wheel installed to build wheels
  - cmd: "%PYTHON%\\python.exe -m pip install wheel"
  - cmd: "%PYTHON%\\python.exe -m pip install cython"
  - cmd: "%PYTHON%\\python.exe -m pip install numpy"
  - cmd: "%PYTHON%\\python.exe -m pip install pytest"
  - cmd: "%PYTHON%\\python.exe -m pip install psutil"
  - cmd: "%PYTHON%\\python.exe -m pip install ipython"
  - ps: |
      if ($env:PYTHON -eq "C:\\Python27"){
          "%PYTHON%\\python.exe -m pip install django>=1.7,<1.8"
      }
  - cmd: "set PYTHONPATH=%PYTHONPATH%;%APPVEYOR_BUILD_FOLDER%"

build_script:
  - "%PYTHON%\\python.exe build_tools/build.py"

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  # - "build.cmd %PYTHON%\\python.exe setup.py test"
  - "build.cmd %PYTHON%\\python.exe -m pytest"

# after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  # - "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  # - path: dist\*
  - path: build\lib.*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.